version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: yc-stock-valuation
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - TUSHARE_TOKEN=${TUSHARE_TOKEN:-}
      - YAHOO_FINANCE_TIMEOUT=30000
      - CORS_ORIGIN=*
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      # 可选：挂载日志目录
      - ./logs:/app/logs
    networks:
      - yc-network
    labels:
      - "com.example.service=yc-stock-valuation"
      - "com.example.version=1.0.0"

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: yc-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - yc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: yc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - yc-network
    labels:
      - "com.example.service=nginx-proxy"

volumes:
  redis_data:
    driver: local

networks:
  yc-network:
    driver: bridge
    name: yc-stock-valuation-network

# 开发环境配置
---
version: '3.8'

services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: yc-stock-valuation-dev
    ports:
      - "3000:3000"  # 前端开发服务器
      - "5000:5000"  # 后端API服务器
    environment:
      - NODE_ENV=development
      - PORT=5000
      - TUSHARE_TOKEN=${TUSHARE_TOKEN:-}
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
    volumes:
      # 挂载源代码以支持热重载
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    restart: unless-stopped
    networks:
      - yc-dev-network
    command: npm run dev

  redis-dev:
    image: redis:7-alpine
    container_name: yc-redis-dev
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - yc-dev-network

networks:
  yc-dev-network:
    driver: bridge
    name: yc-stock-valuation-dev-network